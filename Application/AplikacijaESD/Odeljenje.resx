<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxNazad5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
  <data name="pictureBoxIzlaz5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bdt/bvrHnRBs9C8AAAAASUVORK5CYII=
</value>
  </data>
</root>